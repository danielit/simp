var SIT_COUNTER = 0 ;

Ext.define('Sit.Form', {
	extend: 'Ext.form.Panel',
	alias: 'widget.sitform',
	requires: ['Ext.data.*', 'Ext.form.*'],
	xtype: 'form-sit',
	frame: true,
	bodyPadding: 5,
    maxHeight:200,
    autoScroll:true,

	initComponent: function() {
		Ext.apply(this, {
			fieldDefaults: {
				labelAlign: 'right',
				msgTarget: 'qtip',
                anchor:'100%'
			},
			iconCls: 'icon-form',
			layout: 'anchor',
			anchor: '100%',
            collapsible:'ture',
			align: 'center',
			items: [{
				xtype: 'container',
				itemId: 'form.container.a',
				layout: 'hbox',
                align:'center',
				defaultType: 'textfield',
				margin: '0 0 5 0',
				items: [{
					xtype: 'combobox',
					id: 'sitform.class',
					name: 'class',
                    width:300,
					displayField: 'name',
					valueField: 'id',
					queryMode: 'remote',
					emptyText: '请选择班级...',
					fieldLabel: '班级',
					hideLabel: false,
					margins: '0 6 0 0',
					store: class_id_store,
					allowBlank: false,
					forceSelection: true,
					listeners: {
						scop: this,
						'select': function(combo, records, index) {
							classid = combo.getValue();
							student_name_id_store.load({
								'params': {
									'classid': classid
								}
							});
						}
					}
				},
				{
					xtype: 'combobox',
					name: 'student',
                    width:300,
					id: 'sitform.name',
					displayField: 'name',
					valueField: 'id',
					queryMode: 'remote',
					emptyText: '请选择姓名...',
					fieldLabel: '姓名',
					margins: '0 6 0 0',
					store: student_name_id_store,
					allowBlank: false,
					forceSelection: true,
					listeners: {
						scop: this,
						'select': function(combo, records, index) {}
					}
				}]
			},
			{
				xtype: 'container',
				itemId: 'form.container.b',
				layout: 'hbox',
				defaultType: 'textfield',
				margin: '0 0 5 0',
				items: [{
					xtype: 'combobox',
					id: 'cbsittype',
					name: 'type',
                    width:300,
					displayField: 'type',
					valueField: 'type',
					queryMode: 'local',
					emptyText: '请选择考勤类型...',
					fieldLabel: '类型',
					margins: '0 6 0 0',
					store: sit_type_store,
					allowBlank: false,
					forceSelection: true
				},
                {
					id: 'sithidden',
					//fieldLabel: '日期',
                    width:300,
					name: 'idc',
                    hidden:true
				},
				{
					xtype: 'datefield',
					id: 'sitdate',
                    format:'Y/m/d',
					fieldLabel: '日期',
                    width:300,
					name: 'date',
					allowBlank: false,
					margins: '0 6 0 0',
					maxValue: new Date()
				}]

			},
			{
				xtype: 'container',
				itemId: 'form.container.c',
				layout: 'hbox',
				defaultType: 'textfield',
				margin: '0 0 5 0',
				items: [{
					xtype: 'combobox',
					id: 'cbsitnclass',
					name: 'nclass',
                    width:300,
					displayField: 'nclass',
					valueField: 'nclass',
					queryMode: 'local',
					emptyText: '请选择第几节课...',
					fieldLabel: '节次',
					margins: '0 6 0 0',
					store: sit_nclass_store,
					allowBlank: false,
					forceSelection: true
				}]
			},
			{
				xtype: 'container',
				itemId: 'form.container.d',
				layout: 'hbox',
                width:700,
				margin: '0 0 5 0',
				items: [{
					xtype: 'textareafield',
					id: 'sitreason',
					grow: true,
					margins: '0 6 0 0',
					name: 'ps',
					fieldLabel: '备注',
					allowBlank: true,
					width: 610,
					emptyText: '如有需要，请在此填写备注...'
				}]
			},
            {
				xtype: 'container',
				itemId: 'form.container.e',
				layout: 'hbox',
                width:700,
				margin: '0 0 5 0',
                align:'center',
                defaults:{
                    margin: '0 0 5 25',
                },
				items: [{
					xtype: 'button',
                    width:80,
                    margin: '0 0 0 240',
                    text:'重置',
                    scope:this,
				    handler: this.onResetClick
				},
                {
					xtype: 'button',
                    text:'确认',
                    width:80,
                    scope:this,
				    handler: this.onCompleteClick
                }]
			}
        ]
		});
		this.callParent();
	},

	onResetClick: function() {
		this.getForm().reset();
	},

	onCompleteClick: function() {
		var form = this.getForm();
		if (form.isValid()) {
            
            val = form.getValues() ;
            console.log("get from form");
            console.log(val);
            val.class = Ext.getCmp('sitform.class').getRawValue() ;
            val.student = Ext.getCmp('sitform.name').getRawValue() ;
            val.idc = ++SIT_COUNTER ;
           
            //sit_info_store.loadData([val]) ;
            sit_info_store.add([val]) ;
            form.reset() ;
		}
	}
});

//define the grid of displaying quan of week
Ext.define('SI.Grid.StuInfo', {
	extend: 'Ext.grid.Panel',
	alias: 'widget.stuinfogrid',

	requires: ['Ext.grid.plugin.CellEditing', 'Ext.form.field.Text', 'Ext.toolbar.TextItem', 'Ext.panel.Panel', 'Ext.ux.form.SearchField', 'Ext.ux.CheckColumn', 'Ext.selection.CheckboxModel', 'Ext.selection.CellModel'],

	initComponent: function() {

		this.editing = Ext.create('Ext.grid.plugin.CellEditing', {
			clickToEdit: 1
		});

		this.CboxModel = Ext.create('Ext.selection.CheckboxModel');
		this.pBar = Ext.create('Ext.PagingToolbar', {
			store: this.store,
            id:'stuinfobar',
			displayInfo: true,
			displayMsg: '显示 {0} - {1} 条，共计 {2} 条',
			emptyMsg: "没有数据"
		});

		Ext.apply(this, {
			iconCls: 'icon-grid',
			frame: true,
            //closeable:true,
			//closeAction: 'hiden',
            collapsible:'ture',
			selModel: this.CboxModel,
			bbar: this.pBar,
			plugins: [this.editing],
			dockedItems: [{
				xtype: 'toolbar',
				items: [                {
                	xtype: 'combobox',
                    id:'sit.grid.cb.class',
					name: 'week',
                    width:300,
					displayField: 'name',
					valueField: 'id',
					queryMode: 'remote',
					emptyText: '所有班级',
					fieldLabel: '请选择',
					margins: '0 6 0 0',
					store: class_id_store,
					allowBlank: false,
					forceSelection: true,
					listeners: {
						scop: this,
						'select': function(combo, records, index) {}
					}
                },{
					iconCls: 'icon-add',
					text: '查看',
					scope: this,
					handler: this.onLookOverClass
				}]
			},
			{
				weight: 1,
				xtype: 'toolbar',
				dock: 'bottom',
				ui: 'footer',
				items: [/*'->', {
					iconCls: 'icon-save',
					text: '提交',
					scope: this,
                    //hidden:true,
					//handler: this.onSync
                    id:'quangridweeksave',
                    handler:function(){
                        console.log(ret) ;
                    }
				}*/]
			}],
            defaults:{
                menuDisabled:true
            },
			columns: [{
				text: '序号',
                style:{textAlign:'center'},
                algin:'center',
				width: 60,
				sortable: true,
				resizable: false,
				draggable: false,
				hideable: false,
                //hidden:true,
				//menuDisabled: true,
				dataIndex: 'idc'
			},
			{
				text: '姓名',
                style:{textAlign:'center'},
                algin:'center',
                width:60,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'name',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '学号',
                style:{textAlign:'center'},
                algin:'center',
                width:100,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'stuid',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '身份证号',
                style:{textAlign:'center'},
                algin:'center',
                width:140,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'identify',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '准考证号',
                style:{textAlign:'center'},
                algin:'center',
                width:125,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'examid',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '出生日期',
                style:{textAlign:'center'},
                algin:'center',
                width:80,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'birthday',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '性别',
                style:{textAlign:'center'},
                algin:'center',
                width:40,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'gender',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '学生类型',
                style:{textAlign:'center'},
                algin:'center',
                width:60,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'type',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '班级',
                style:{textAlign:'center'},
                algin:'center',
                width:160, //flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'class',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '家庭住址',
                style:{textAlign:'center'},
                algin:'center',
                width:160,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'address',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '联系电话',
                style:{textAlign:'center'},
                algin:'center',
                width:100,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'homephone',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '班主任',
                style:{textAlign:'center'},
                algin:'center',
                width:60,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'teacher',
				field: {
					type: 'textfield'
				}
			},
            {
				text: '在校状态',
                style:{textAlign:'center'},
                algin:'center',
                width:70,
				//flex: 1,
				sortable: true,
				//dataIndex: 'classname',
				dataIndex: 'other',
				field: {
					type: 'textfield'
				}
			}]
		});
		this.callParent();
		this.getSelectionModel().on('selectionchange', this.onSelectChange, this);
	},

	onSelectChange: function(selModel, selections) {
       /* if (selections) {
		    this.down('#delete').setDisabled(selections.length === 0);
        }*/
	},
    onLookOverClass: function(){
        var cid= Ext.getCmp('sit.grid.cb.class').getValue() ;
        console.log('look over stu info of cid',cid) ; 
        //quan_week_store.loadData([],false) ;
        all_stu_info_store.load({
            'params':{
                'cid':cid
            },
            scope:this,
            callback:function(records,operations,success){
                if (success === false){
                    Ext.MessageBox.show({
                        title: '量化查询失败',
                        msg: '远程服务器错误，<br/>请联系系统管理员！',
					    //msg: operation.getError(),
					    icon: Ext.MessageBox.ERROR,
					    buttons: Ext.Msg.OK
			        });
                    return ; 
                }
                if (records && records.length === 0){
                    console.log(records) ;
                }
            }
        }) ;
    }
});

function getSitInfoGrid(){
    var sitInfoGrid = Ext.getCmp('sit.stuinfo.grid') ;
    if (sitInfoGrid==null){
        sitInfoGrid = Ext.create('SI.Grid.StuInfo',{
            title:'学生基本信息',
            id:'sit.stuinfo.grid',
            itemId:'stuinfo.grid',
            store:all_stu_info_store,
		    icon: 'static/pic/css/tabs.gif'
        }) ; 
    } 
    return sitInfoGrid ;
}


Ext.require(['Ext.data.*', 'Ext.tip.QuickTipManager', 'Ext.window.MessageBox']);

//define the container for attend 
Ext.define('attend.window', {
	extend: 'Ext.container.Container',
	alias: 'widget.attendcontainer',
	initComponent: function() {
		Ext.apply(this, {
			padding: '0 0 0 0',
			layout: {
				type: 'vbox',
				align: 'stretch',
				pack: 'start'
			},
			items: [{// attend add new info grid
				itemId: 'attendgrid',
				id: 'attendgrid',
				xtype: 'attendgrid',
				title: '学生考勤',
				flex: 1,
                hidden:false,
                //minHeight:200,
                //maxHeight:500,
				store: attend_info_store,
				listeners: {
					selectionchange: function(selModel, selected) {}
				}
			},
            {// add new attend info form
				itemId: 'attendform',
				id: 'attendform',
				xtype: 'attendform',
                title:'学生考勤',
                minHeight:100,
                maxHeight:500,
				hidden: false,
				manageHeight: false,
				margins: '0 0 0 0'
			}]
		});
		this.callParent();
	}
});

function getAttendWin(){
    var attendWin = Ext.getCmp('attendwin') ;
    if (attendWin==null){
        attendWin = Ext.create('attend.window',{
            title:'学生考勤管理',
            id:'attendwin',
            itemId:'attendwin',
            xtype:'attendcontainer',
		    icon: 'static/pic/css/tabs.gif'
        }) ; 
    } 
    return attendWin ;
}
function setAttendWinShow(id,sure){
    var cmp = Ext.getCmp(id) ;
    if(cmp==null){
        console.log('cant find the id of ext cmp') ;
    }
    if(sure){
        cmp.show() ;
    }else{
        cmp.hide() ;
    }
}

function setAttendWinsShow(mask) {
    setAttendWinShow('attendsearch.class',!mask) ;
    setAttendWinShow('attendsearch.bdate',!mask) ;
    setAttendWinShow('attendsearch.edate',!mask) ;
    setAttendWinShow('attendsearch.btn',!mask) ;
    setAttendWinShow('attendgridsave',mask) ;
    setAttendWinShow('attendform',mask) ;
    //setattendWinShow('attendformdetail',mask & 16) ;
} 
